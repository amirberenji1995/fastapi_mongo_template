name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff

      - name: Run linters (ruff)
        run: |
          ruff check .

      - name: Run tests
        run: |
          PYTHONPATH=. pytest -q
  build-and-push:
    runs-on: ubuntu-latest
    needs:  lint-and-test
    # Allow pushes to GHCR via GITHUB_TOKEN
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.meta.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:hash-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  scan:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # Optional: Cache Trivy database to speed up subsequent runs
      - name: Cache Trivy database
        uses: actions/cache@v4
        with:
          path: /home/runner/.cache/trivy
          key: ${{ runner.os }}-trivy-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-trivy-

      - name: Scan published image with Trivy
        uses: aquasecurity/trivy-action@0.32.0 # Updated to the latest version you found
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:hash-${{ github.sha }}
          format: 'table'
          exit-code: '1' # optional: fail on vulnerabilities